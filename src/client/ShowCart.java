/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import server.StoreInterface;

/**
 *
 * @author Yazan
 */
public class ShowCart extends javax.swing.JFrame {

    /**
     * Creates new form showCart
     */
    DefaultTableModel model;
    Map<Integer, List> modelsNcart;
    int cartcount;
    Client father;

    Registry reg = LocateRegistry.getRegistry("localhost", 1099);
    StoreInterface server = (StoreInterface) reg.lookup("rmi://localhost/service");

    public ShowCart(int cartcount,Client father) throws RemoteException, NotBoundException {
        initComponents();
        this.cartcount = cartcount;
        this.father = father;

        model = (DefaultTableModel) modelsNcartTable.getModel();
        modelsNcartTable.setEnabled(false);

        showModels();

    }

    private ShowCart() throws RemoteException, NotBoundException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        modelsNcartTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cartValuelbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        modelno = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        removefromcartbtn = new javax.swing.JButton();
        checkoutbtn = new javax.swing.JButton();
        errorlbl = new javax.swing.JLabel();
        successlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        modelsNcartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Model ID", "Model Name", "Quantity", "Unit Price", "Total Price"
            }
        ));
        jScrollPane1.setViewportView(modelsNcartTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 440, 140));

        jLabel1.setText("Cart Value: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        cartValuelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cartValuelbl.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(cartValuelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 82, 40));

        jLabel3.setText("Model ID :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 70, 20));

        jLabel4.setText("Quantity :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 60, 20));

        modelno.setMaximumSize(new java.awt.Dimension(125, 25));
        modelno.setMinimumSize(new java.awt.Dimension(125, 25));
        modelno.setPreferredSize(new java.awt.Dimension(125, 25));
        getContentPane().add(modelno, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 100, -1));

        quantity.setMaximumSize(new java.awt.Dimension(125, 25));
        quantity.setMinimumSize(new java.awt.Dimension(125, 25));
        quantity.setPreferredSize(new java.awt.Dimension(125, 25));
        getContentPane().add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 100, -1));

        removefromcartbtn.setText("Remove From Cart");
        removefromcartbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removefromcartbtnActionPerformed(evt);
            }
        });
        getContentPane().add(removefromcartbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 160, -1));

        checkoutbtn.setText("Checkout");
        checkoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutbtnActionPerformed(evt);
            }
        });
        getContentPane().add(checkoutbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 160, 50));

        errorlbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        errorlbl.setForeground(new java.awt.Color(255, 0, 0));
        errorlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(errorlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 300, 20));

        successlbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        successlbl.setForeground(new java.awt.Color(0, 153, 0));
        successlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(successlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 210, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removefromcartbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removefromcartbtnActionPerformed
        try {
            errorlbl.setText("");
            successlbl.setText("");
            String modelnostr = modelno.getText();
            String quantitystr = quantity.getText();
            int modelID = 0, quantity = 0;
            if (modelnostr.equals("") || quantitystr.equals("")) {
                errorlbl.setText("*you should not leave a field empty");
            } else {
                try {
                    modelID = Integer.parseInt(modelnostr);
                    quantity = Integer.parseInt(quantitystr);
                } catch (NumberFormatException ex) {
                    modelID = -1;
                    quantity = -1;
                }
                if (modelID == -1 || quantity == -1) {
                    errorlbl.setText("*the input must be numerical only");
                } else {
                    ArrayList<Integer> modelIDsNcart = server.getModelIDsNcart(cartcount);
                    if (modelIDsNcart.contains(modelID)) {
                        boolean removed = false;
                        removed = server.removeFromCart(cartcount, modelID, quantity);
                        if (!removed) {
                            errorlbl.setText("*sorry, you don't have that much");
                        } else {
                            father.showModels();
                            successlbl.setText("Model has been removed");
                        }
                        showModels();
                    } else {
                        errorlbl.setText("*this model is not in your cart");
                    }
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(ShowCart.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removefromcartbtnActionPerformed

    private void checkoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutbtnActionPerformed
        try {
            ArrayList<Integer> modelIDsNcart = server.getModelIDsNcart(cartcount);
            if (modelIDsNcart.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "you can't checkout empty cart");
            } else {
                int billID = server.checkOut(cartcount);
                ShowBill showBill = new ShowBill(billID);
                showBill.setVisible(true);
                showBill.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                this.dispose();
            }
        } catch (RemoteException | NotBoundException ex) {
            Logger.getLogger(ShowCart.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkoutbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ShowCart().setVisible(true);
                } catch (RemoteException | NotBoundException ex) {
                    Logger.getLogger(ShowCart.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void showModels() throws RemoteException {
        modelsNcart = server.getModelsNcart(cartcount);

        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Set<Integer> keySet = modelsNcart.keySet();

        float cartValue = 0;

        for (Integer key : keySet) {
            ArrayList<String> get = (ArrayList) modelsNcart.get(key);
            model.addRow(new Object[]{key.toString(), get.get(0), get.get(1), get.get(2), get.get(3)});
            cartValue += Float.parseFloat(get.get(3));
        }
        cartValuelbl.setText(Float.toString(cartValue));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cartValuelbl;
    private javax.swing.JButton checkoutbtn;
    private javax.swing.JLabel errorlbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField modelno;
    private javax.swing.JTable modelsNcartTable;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton removefromcartbtn;
    private javax.swing.JLabel successlbl;
    // End of variables declaration//GEN-END:variables
}
