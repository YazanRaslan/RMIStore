/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import server.StoreInterface;

/**
 *
 * @author Yazan
 */
public class ShowBill extends javax.swing.JFrame {

    /**
     * Creates new form ShowBill
     */
    DefaultTableModel model;
    Map<Integer, List> modelsNbill;
    int billID;

    Registry reg = LocateRegistry.getRegistry("localhost", 1099);
    StoreInterface server = (StoreInterface) reg.lookup("rmi://localhost/service");

    public ShowBill(int billID) throws RemoteException, NotBoundException {
        initComponents();
        
        model = (DefaultTableModel) modelsNbilltable.getModel();
        modelsNbilltable.setEnabled(false);
        
        this.billID = billID;

        int userID = server.getUserID();

        ArrayList<Integer> userbills;
        userbills = server.getUserbills(userID);
        userbills.forEach((bID) -> {
            userbillscombobox.addItem(Integer.toString(bID));
        });

        userbillscombobox.setSelectedItem(Integer.toString(billID));

    }

    private ShowBill() throws RemoteException, NotBoundException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        modelsNbilltable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        billValuelbl = new javax.swing.JLabel();
        userbillscombobox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        modelsNbilltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Model Name", "Quantity", "Unit Price", "Total Price"
            }
        ));
        jScrollPane1.setViewportView(modelsNbilltable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 440, 260));

        jLabel1.setText("Bill ID :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 80, 20));

        jLabel2.setText("Bill Value: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, -1));

        billValuelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        billValuelbl.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(billValuelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 82, 40));

        userbillscombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                userbillscomboboxItemStateChanged(evt);
            }
        });
        userbillscombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userbillscomboboxActionPerformed(evt);
            }
        });
        getContentPane().add(userbillscombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 130, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userbillscomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbillscomboboxActionPerformed
        //showModels();
    }//GEN-LAST:event_userbillscomboboxActionPerformed

    private void userbillscomboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_userbillscomboboxItemStateChanged
        showModels();
    }//GEN-LAST:event_userbillscomboboxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new ShowBill().setVisible(true);
                } catch (RemoteException | NotBoundException ex) {
                    Logger.getLogger(ShowBill.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel billValuelbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable modelsNbilltable;
    private javax.swing.JComboBox<String> userbillscombobox;
    // End of variables declaration//GEN-END:variables

    private void showModels() {
        try {
            String combostr = (String) userbillscombobox.getSelectedItem();
            int billNo = Integer.parseInt(combostr);
            
            modelsNbill = server.getModelsNBill(billNo);
            
            
            for (int i = model.getRowCount() - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            
            Set<Integer> keySet = modelsNbill.keySet();
            
            float billValue = 0;
            
            for (Integer key : keySet) {
                ArrayList<String> get = (ArrayList) modelsNbill.get(key);
                model.addRow(new Object[]{key.toString(), get.get(0), get.get(1), get.get(2), get.get(3)});
                billValue += Float.parseFloat(get.get(3));
            }
            billValuelbl.setText(Float.toString(billValue));
        } catch (RemoteException ex) {
            Logger.getLogger(ShowBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
